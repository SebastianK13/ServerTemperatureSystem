// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerTemperatureSystem.EFCoreDbContext;

namespace ServerTemperatureSystem.Migrations
{
    [DbContext(typeof(AppParamsDbContext))]
    [Migration("20210726001526_dbModification")]
    partial class dbModification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("ServerTemperatureSystem.Models.CPU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CriticalTemp")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CPU");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.Core", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CPUId")
                        .HasColumnType("int");

                    b.Property<double>("CriticalTemp")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.ToTable("Cores");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.Memory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Memory");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.Motherboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CriticalTemp")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Mobo");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.TemperatureDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CPUId")
                        .HasColumnType("int");

                    b.Property<int?>("CoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MoboId")
                        .HasColumnType("int");

                    b.Property<double>("Temperature")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.HasIndex("CoreId");

                    b.HasIndex("MoboId");

                    b.ToTable("TemperatureDetails");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.UsageDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CPUId")
                        .HasColumnType("int");

                    b.Property<int?>("CoreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MemoryId")
                        .HasColumnType("int");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.HasIndex("CoreId");

                    b.HasIndex("MemoryId");

                    b.ToTable("UsageDetails");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.Core", b =>
                {
                    b.HasOne("ServerTemperatureSystem.Models.CPU", "CPU")
                        .WithMany("Cores")
                        .HasForeignKey("CPUId");

                    b.Navigation("CPU");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.TemperatureDetails", b =>
                {
                    b.HasOne("ServerTemperatureSystem.Models.CPU", "CPU")
                        .WithMany("TemperatureReadings")
                        .HasForeignKey("CPUId");

                    b.HasOne("ServerTemperatureSystem.Models.Core", "Core")
                        .WithMany("TemperatureReadings")
                        .HasForeignKey("CoreId");

                    b.HasOne("ServerTemperatureSystem.Models.Motherboard", "Mobo")
                        .WithMany("TemperatureReadings")
                        .HasForeignKey("MoboId");

                    b.Navigation("Core");

                    b.Navigation("CPU");

                    b.Navigation("Mobo");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.UsageDetails", b =>
                {
                    b.HasOne("ServerTemperatureSystem.Models.CPU", "CPU")
                        .WithMany("UsageReadings")
                        .HasForeignKey("CPUId");

                    b.HasOne("ServerTemperatureSystem.Models.Core", "Core")
                        .WithMany("UsageReadings")
                        .HasForeignKey("CoreId");

                    b.HasOne("ServerTemperatureSystem.Models.Memory", "Memory")
                        .WithMany("UsageReadings")
                        .HasForeignKey("MemoryId");

                    b.Navigation("Core");

                    b.Navigation("CPU");

                    b.Navigation("Memory");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.CPU", b =>
                {
                    b.Navigation("Cores");

                    b.Navigation("TemperatureReadings");

                    b.Navigation("UsageReadings");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.Core", b =>
                {
                    b.Navigation("TemperatureReadings");

                    b.Navigation("UsageReadings");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.Memory", b =>
                {
                    b.Navigation("UsageReadings");
                });

            modelBuilder.Entity("ServerTemperatureSystem.Models.Motherboard", b =>
                {
                    b.Navigation("TemperatureReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
